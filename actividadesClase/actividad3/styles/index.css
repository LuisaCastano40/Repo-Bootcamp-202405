/* variables */
:root{
    --colorFondo: beige;
    --colorClaro: lightsalmon;
    --colorEnfasis: rgb(52, 133, 125);
    --tipografía:'Arial Narrow', Arial, sans-serif;
}


/* condiciones iniciales */

*{
    padding: 0;
    margin: 0;
    box-sizing: border-box;
}

body{
    background-color: var(--colorFondo);
    font-family: var(--tipografía);
    font-size: 25px;
    overflow-x: hidden;
}

/* -------------HEADER------- */
header {
    width: 100vw;
    height: auto;
}

.titulo{
    height: 150px;
    width: 100%;
    background-color: var(--colorEnfasis);
    display: grid;
    place-content: center;
    color: var(--colorFondo);
    transition: all 500ms ease-in-out;
}

.titulo:active{
    background-color: brown;
    color: chartreuse;
    transform: scale(1.2);
}


/* mi carrusel de imágenes */
/* contenedor general - es como un marco que me define qué se ve y qué no se ve */
.contenedor-slider{
    border: solid 5px var(--colorEnfasis);

    /* 
        Para responsive, no usar valores fijos como PX, Sino valores relativos, como % y vw -vh
    */
    width: 75%;
    height: 65vh;
    /* width: 70%;
    height: 65vh; */
    /* margin: auto -> centrar contenedores */
    margin: 100px auto;
    overflow-x: hidden;
}

/* contenedor directo, le especifico cómo se debe mover */
.slider{
    width: 100%;
    height: 100%;
    display: flex;
    /* nombre que se conecta con el keyframe */
    animation-name: deslizar;
     /*tiempo de duración  */
    animation-duration: 10s;
    /* cuantas veces queremos que se repita la animación */
    animation-iteration-count: infinite;
    /* forma en que queremos que se de el movimiento */
    animation-timing-function: ease-in-out;
    /* dirección de mi animación */
    animation-direction: alternate;
}

/* Vamos a poner a funcionar la animación */
/* 0% -> 50% -> 100%
    from -> to */

@keyframes deslizar {
    from{
        transform: translateX(0%);
        /* transform: scale(0.5); */
    }
    50%{
        transform: translateX(-150%);
        
    }
    to{
        transform: translateX(-300%);
        /* transform: scale(1.2); */
    }
}

/* @keyframes rotar {
    from{
        transform: rotate(0deg);
    }
    to{
        transform: rotate(-360deg);
    }
} */

/* @keyframes escala {
    
    from{
        transform: scale(0.4);
    }
    50%{
        transform: scale(1);
    }
    to{
        transform: scale(1.7);
    }
} */

.contenedor-slider img{
    /*  */
    /* flex: 1 0 100%; */
    height: 100%;
    width: 100%;
    
}

/* -------------MAIN------- */

main{
    display: flex;
    justify-content: center;
    
}
.contenido{
    border: solid 5px var(--colorEnfasis);
    width: 75%;
    height: auto;
    margin-bottom: 100px;
}

.tituloSecundario{
    text-align: center;
    padding: 25px;
}
.imgParrafo{
    display: flex;
    gap: 45px;
    align-items: center;
    padding: 15px;
}

/* Yo puedo llamar varios elementos de mi html, a los que les voy a aplicar los mismos estilod, sólo separándolos por , */
/* .imgParrafo img, 
.imgParrafo p {
    width: 50%;
    height: 100%;
} */

.imgParrafo img{
    width: 50%;
}

.imgParrafo p{
    width: 50%;
}

/* -------------FOOTER------- */

footer{
    height: 150px;
    width: 100%;
    background-color: var(--colorEnfasis);
    /* alternativa para centrar un elemento */
    display: grid;
    /* centra x y */
    place-content: center;
    color: var(--colorFondo);
}

/* DISEÑO RESPONSIVE */

/* 

    1. trabajen en % (medidas no fijas) de una vez
    2. MEDIA QUERIES
*/



/* MEDIA QUERIES */
/* 
    Me permiten cambiar la apariencia de mis elementos en función de el tamaño de mi pantalla

    dimensión min PC -> 1200px en adelante
    dimensión para tablet -> 500px -> 1024px
    dimensiones de celular -> 320 -> 490px

*/

/* Estilos para mi celular */
/* 
    estilos nuevos según los px que yo defina
*/
@media screen and (max-width:490px){
    /* body{
        background-color: blue;
    } */
    .titulo{
        font-size: 20px;
        text-align: center;
    }

    .imgParrafo{
        display: flex;
        flex-direction: column;
    }

    .imgParrafo img{
        width: 100%;
    }
    
    .imgParrafo p{
        width: 100%;
    }
    
}